// Generated by Dagger (https://dagger.dev).
package com.ballchalu.razorpay.checkout;

import androidx.lifecycle.ViewModelProvider;
import com.ballchalu.razorpay.base.BaseFragment_MembersInjector;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import javax.inject.Provider;

public final class RazorPayViewFragment_MembersInjector implements MembersInjector<RazorPayViewFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryAndViewModelFactory1Provider;

  public RazorPayViewFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryAndViewModelFactory1Provider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.viewModelFactoryAndViewModelFactory1Provider = viewModelFactoryAndViewModelFactory1Provider;
  }

  public static MembersInjector<RazorPayViewFragment> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryAndViewModelFactory1Provider) {
    return new RazorPayViewFragment_MembersInjector(androidInjectorProvider, viewModelFactoryAndViewModelFactory1Provider);}

  @Override
  public void injectMembers(RazorPayViewFragment instance) {
    DaggerFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    BaseFragment_MembersInjector.injectViewModelFactory1(instance, viewModelFactoryAndViewModelFactory1Provider.get());
    injectViewModelFactory(instance, viewModelFactoryAndViewModelFactory1Provider.get());
  }

  public static void injectViewModelFactory(RazorPayViewFragment instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
